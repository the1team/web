{"version":3,"sources":["./src/app/services/orden.service.ts","./src/app/services/carrito.service.ts","./src/environments/environment.ts","./src/app/registro-cliente/registro-cliente.component.ts","./src/app/registro-cliente/registro-cliente.component.html","./src/app/ordenes-cliente/ordenes-cliente.component.html","./src/app/ordenes-cliente/ordenes-cliente.component.ts","./src/app/detalle-producto/detalle-producto.component.html","./src/app/detalle-producto/detalle-producto.component.ts","./src/app/services/producto.service.ts","./src/app/buscar-producto/buscar-producto.component.html","./src/app/buscar-producto/buscar-producto.component.ts","./src/app/login-cliente/login-cliente.component.html","./src/app/login-cliente/login-cliente.component.ts","./src/app/orden-creada/orden-creada.component.html","./src/app/orden-creada/orden-creada.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pagar-orden/pagar-orden.component.ts","./src/app/pagar-orden/pagar-orden.component.html","./src/app/app.module.ts","./src/app/detalle-carrito/detalle-carrito.component.html","./src/app/detalle-carrito/detalle-carrito.component.ts","./src/app/services/configuracion.ts","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/app/services/cliente.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { IMedioPago, IOrden, IOrdenResponse } from '../interfaces/orden.response'\n\nimport { Configuracion } from './configuracion';\nimport { ICliente } from '../interfaces/cliente.response';\n\n@Injectable({\n    providedIn: 'root'\n})\n  \nexport class OrdenService {\n  \n    ordenCreada : IOrden | undefined;\n\n    httpOptions = {\n      headers: new HttpHeaders({'Content-Type': 'application/json'})\n    }\n\n    constructor(private http: HttpClient,\n        private configuracion : Configuracion) {        \n    }\n\n    consultarMedios() {\n        let serviceUrl : string = this.configuracion.urlServicio;\n        let url = serviceUrl + '/pago/medios/obtener' ;      \n        return this.http.get<IMedioPago[]> ( url , this.httpOptions);            \n    }\n\n    colocarOrden(orden : IOrden) {\n        let serviceUrl : string = this.configuracion.urlServicio;\n        let url = serviceUrl + '/orden/colocar' ;      \n        return this.http.post<IOrdenResponse>( \n          url,\n          orden,\n          this.httpOptions);\n      }\n    \n    persistir( orden : IOrden ) {\n        this.ordenCreada = orden;\n    }\n\n    consultarOrdenesPorUsuario( cliente : ICliente ) {\n        let serviceUrl : string = this.configuracion.urlServicio;\n        let url = serviceUrl + '/orden/ordenes_cliente/' + cliente.userName ;      \n        return this.http.get<IOrden[]>( \n          url,\n          this.httpOptions);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Configuracion } from './configuracion';\n\nimport { IRespuesta, ICarrito, IProducto, ICotizar } from '../interfaces/carrito.response'\nimport { ICliente } from '../interfaces/cliente.response';\nimport { IOrden , IOrdenResponse } from '../interfaces/orden.response';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CarritoService {\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'application/json'})\n  }\n\n  pais : string = 'COL';\n  usuario : string = '';\n  carrito : ICarrito | undefined;\n  cliente : ICliente | undefined;\n  productos : IProducto [] = [];\n\n    constructor(\n        private http: HttpClient,\n        private configuracion : Configuracion\n      ) {}    \n\n    CarritoExiste() {\n      if( this.carrito == undefined )\n      {\n        return 0;\n      }\n      else\n      {\n        return this.carrito.id;\n      }\n    }\n\n    persistir( _carrito : ICarrito ) {\n      this.carrito = _carrito;\n    }\n\n    actualizarPais( _pais : string ) {\n      this.pais = _pais;\n    }\n\n    persistirCliente( _cliente : ICliente ) {\n      this.cliente = _cliente;\n    }\n\n    persistirProductos( _productos : IProducto [] ) {\n      this.productos = _productos;\n    }\n\n    ObtenerCarrito(newEmail : string) {\n      if( newEmail == '' )\n      {\n        if( this.usuario == '')\n        {\n          this.usuario = this.configuracion.obtenerStringAleatoria();\n        }\n      }\n      else\n      {\n        this.usuario = newEmail;\n      }\n      let serviceUrl : string = this.configuracion.urlServicio;\n      let url = serviceUrl + '/carrito/obtener/' + this.usuario + '/' + this.pais ;      \n      return this.http.get<ICarrito> ( url , this.httpOptions);\n    }\n\n    limpiar() {\n\n      this.productos = [];\n      this.carrito = undefined;\n\n      let serviceUrl : string = this.configuracion.urlServicio;\n      let url = serviceUrl + '/carrito/limpiar/' + this.CarritoExiste().toString() ;      \n      return this.http.delete<number> ( url , this.httpOptions);       \n\n    }\n\n    AgregarProducto(producto: IProducto) {      \n      let serviceUrl : string = this.configuracion.urlServicio;\n      return this.http.post<IRespuesta>( \n          serviceUrl + '/carrito/producto/agregar',\n          producto,\n          this.httpOptions);\n    }    \n\n    quitarProducto(producto : IProducto) {\n      let serviceUrl : string = this.configuracion.urlServicio;\n      return this.http.post<IRespuesta>( \n        serviceUrl + '/carrito/producto/quitar',\n        producto,\n        this.httpOptions);\n    }\n\n    consultarProductos() {\n      let serviceUrl : string = this.configuracion.urlServicio;\n      let url = serviceUrl + '/carrito/productos/consultar/' + this.CarritoExiste().toString() ;      \n      return this.http.get<IProducto[]> ( url , this.httpOptions);            \n    }\n\n    cotizar() {\n      let request = {\n        carritoId : this.CarritoExiste()\n      };\n      let serviceUrl : string = this.configuracion.urlServicio;\n      let url = serviceUrl + '/carrito/orden/cotizar' ;      \n      return this.http.post<ICotizar> ( url , request , this.httpOptions);            \n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ICliente } from '../interfaces/cliente.response';\nimport { ClienteService } from '../services/cliente.service';\n\n@Component({\n  selector: 'app-registro-cliente',\n  templateUrl: './registro-cliente.component.html',\n  styleUrls: ['./registro-cliente.component.css']\n})\nexport class RegistroClienteComponent implements OnInit {\n  \n  registroForm = this.formBuilder.group({\n    nombre: '',\n    direccion: '',\n    nit: '',\n    telefono: '',\n    email: '',\n    password: ''\n  });\n\n  constructor(private formBuilder: FormBuilder,\n    private clienteService: ClienteService) { \n  }\n\n  ngOnInit(): void {\n\n  }\n\n  onRegistroSubmit() : void {\n\n    let nombre = this.registroForm.get('nombre')?.value;\n    let direccion = this.registroForm.get('direccion')?.value;\n    let nit = this.registroForm.get('nit')?.value;\n    let telefono = this.registroForm.get('telefono')?.value;\n    let email = this.registroForm.get('email')?.value;\n    let password = this.registroForm.get('password')?.value;\n\n    let cliente : ICliente = {\n      idCliente : 0,\n      nombre : nombre,\n      direccion : direccion,\n      nit : nit,\n      telefono : telefono,\n      userName : email,\n      password : password\n    }\n\n    this.clienteService.registrar( cliente ).subscribe(data=>{\n      if( data.idCliente > 0 )\n      {\n        window.alert('Regstro exitoso');\n      }\n      else\n      {\n        window.alert('Ocurrio un error durante el registro');\n      }\n    });\n\n  }\n\n}\n","<section class=\"info_section \">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <div class=\"info_form \">\n                    <h5>\n                        Registrar Cliente\n                    </h5>\n                    <form [formGroup]=\"registroForm\" (ngSubmit)=\"onRegistroSubmit()\" >\n                        <input type=\"text\" placeholder=\"Nombre\" formControlName=\"nombre\" >\n                        <input type=\"text\" placeholder=\"Direccion\" formControlName=\"direccion\" >\n                        <input type=\"text\" placeholder=\"Documento\" formControlName=\"nit\" >\n                        <input type=\"text\" placeholder=\"Telefono\" formControlName=\"telefono\" >\n                        <input type=\"text\" placeholder=\"Enter your email\" formControlName=\"email\" >\n                        <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" >\n                        <button type=\"submit\">\n                            Login\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","<h2>Mis ordenes</h2>\n\n<div *ngIf=\"pensando\">\n\n    <mat-spinner color=\"accent\" diameter=\"20\"></mat-spinner>\n\n</div>\n\n<div *ngFor=\"let orden of ordenes\" style=\"width: 100%;\">\n    <div>\n\n        <h3> {{orden.id}} </h3> \n\n        <div> Estado: {{orden.estado}}  </div>\n        <div> Creada: {{orden.fechaCreacion}}  </div>\n        <div> Total: {{orden.precioTotal}}  </div>\n        <div> Ciudad Destino: {{orden.ciudadEnvio}}  </div>\n\n        <div> <b> Productos </b> </div>\n\n        <div *ngFor=\"let producto of orden.detallesOrden\" style=\"width: 100%;\">\n        {{ producto.cantidadOrdenada }} x {{ producto.nombreProducto }}\n        </div>\n    </div>\n    <hr>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { IOrden } from '../interfaces/orden.response';\nimport { CarritoService } from '../services/carrito.service';\nimport { OrdenService } from '../services/orden.service';\n\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'; \n\n@Component({\n  selector: 'app-ordenes-cliente',\n  templateUrl: './ordenes-cliente.component.html',\n  styleUrls: ['./ordenes-cliente.component.css']\n})\n\nexport class OrdenesClienteComponent implements OnInit {\n\n  ordenes : IOrden[] = [];\n  pensando : boolean = false;\n\n  constructor(private carritoService : CarritoService,\n    private ordenService : OrdenService) { \n      \n    }\n\n  ngOnInit(): void {\n    this.pensando = true;\n    this.ordenService.consultarOrdenesPorUsuario( this.carritoService.cliente! ).subscribe( data => {\n      this.ordenes = data;\n      this.pensando = false;\n    });\n  }\n\n}\n","<div *ngIf=\"producto\">\n    \n\n  <section class=\"product_section layout_padding\">\n    <div class=\"container\">\n      <div class=\"heading_container heading_center\">\n        <h2>\n          [ <span> {{ producto.categoria }} </span> ]\n                <a >{{ producto.nombre }}</a>\n        </h2>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-6 col-lg-4\" >\n          <div class=\"box\">\n            <div class=\"img-box\">\n              <img src=\"images/{{ producto.urlImagen }}\" alt=\"\">\n            </div>\n            <div class=\"detail-box\">\n              \n              <div class=\"product_info\">\n                \n  \n              </div>\n            </div>\n          </div>        \n        </div>\n        <div class=\"col-sm-6 col-lg-4\" >\n          <div class=\"box\">\n            <div *ngIf=\"producto.tipoProveedor=='Local'; else elseBlocktipoProveedor\" >\n              Este producto se vende directamente por K'All sonys\n            </div>\n            <ng-template #elseBlocktipoProveedor>\n              Este producto se vende por el proveedor : {{ producto.codigoProveedor }}\n            </ng-template>\n            <h5>\n              Descripcion del Producto: <br />\n              {{ producto.descripcion }}\n            </h5>\n          </div>\n        </div>\n        <div class=\"col-sm-6 col-lg-4\" >\n\n          <div *ngIf=\"producto.disponibilidad=='DISPONIBLE'; else elseBlockdisponibilidad\" >\n            <span style=\"color:green\">\n            Este producto esta disponible\n          </span>\n          </div>\n          <ng-template #elseBlockdisponibilidad>\n            <span style=\"color: red;\">\n            Este producto no esta disponible\n            </span>\n          </ng-template>\n\n          <h5>\n            <b>{{ producto.moneda }} {{ producto.precio }} </b>\n          </h5>\n\n          <div *ngIf=\"producto.disponibilidad=='DISPONIBLE'\">\n\n              <h5>\n                Agregar al carrito\n              </h5>\n\n            <form [formGroup]=\"agregarForm\" (ngSubmit)=\"onAgregarSubmit()\" >\n              <label for=\"cantidad\">\n                Unidades\n              </label>\n                <input type=\"text\" formControlName=\"cantidad\" placeholder=\"Unidades\">\n                <button type=\"submit\" class=\"generic_button\">\n                    Agregar\n                </button>\n            </form>\n\n          </div>\n\n        <div *ngIf=\"pensando\">\n\n          <mat-spinner color=\"accent\" diameter=\"20\"></mat-spinner>\n\n        </div>\n\n        <div>\n          \n          <button (click)=\"verCarrito()\" class=\"generic_button\">\n            Ver Carrito\n         </button>\n\n        </div>\n\n        </div>\n      </div>\n    </div>\n  </section>\n  \n  \n  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\n\nimport { ProductoService } from '../services/producto.service';\nimport { CarritoService } from '../services/carrito.service';\nimport { IProducto } from '../interfaces/carrito.response'\n\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'; \n\n@Component({\n  selector: 'app-detalle-producto',\n  templateUrl: './detalle-producto.component.html',\n  styleUrls: ['./detalle-producto.component.css']\n})\n\nexport class DetalleProductoComponent implements OnInit {\n\n  producto : IProducto | undefined;\n\n  pensando : boolean = false;\n\n  agregarForm = this.formBuilder.group({\n    cantidad: ''\n  });\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private productoService : ProductoService,\n    private carritoService : CarritoService) { \n  }\n\n  ngOnInit(): void {\n    const routeParams = this.route.snapshot.paramMap;\n    const IdFromRoute = Number(routeParams.get('id'));\n    const productos = this.productoService.getProductsOffline();\n    this.producto = productos.find(x => x.id === IdFromRoute);    \n  }\n\n  onAgregarSubmit() {\n    this.pensando = true;\n    let carritoId = this.carritoService.CarritoExiste();\n    if( carritoId == 0) {\n      this.carritoService.ObtenerCarrito('').subscribe(data => {\n        console.warn('carrito:',data.id);\n        this.carritoService.persistir(data);\n        this.AgregarProducto();\n      });\n    }\n    else {\n      this.AgregarProducto();      \n    }\n  }\n\n  AgregarProducto() {\n    let item : IProducto = this.producto!;\n    const cantidad = this.agregarForm.get('cantidad')?.value;\n    item.cantidad = Number(cantidad);\n\n    if( item.cantidad <= 0 )\n    {\n      window.alert('Cantidad no valida');\n      this.pensando = false;\n      return;\n    }\n\n    item.carritoId = this.carritoService.CarritoExiste();\n    this.carritoService.AgregarProducto(item).subscribe( data => {\n      window.alert(data.mensaje);\n      this.pensando = false;\n    } );\n  }\n\n  verCarrito() {\n    this.router.navigateByUrl('/carrito');\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { IProducto } from '../interfaces/carrito.response'\n\nimport { Configuracion } from './configuracion';\nimport { CarritoService } from './carrito.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProductoService {\n\n  productos : IProducto[] = [];\n\n    constructor(private http: HttpClient,\n        private carritoService : CarritoService,\n        private configuracion : Configuracion\n      ) {}    \n\n    getProducts(busqueda:String) {\n      \n      const httpOptions = {\n        headers: new HttpHeaders({'Content-Type': 'application/json'})\n      }\n\n      let serviceUrl : string = this.configuracion.urlServicio;\n      let moneda : string = this.configuracion.getMonedaFromCountry( this.carritoService.pais );\n      return this.http.get<IProducto[]>( serviceUrl + '/producto/listado/obtener/' + moneda + '/' + busqueda , httpOptions);\n    }    \n\n    getProductsOffline()\n    {\n      return this.productos;\n    }\n\n    persists( collection : IProducto[]  ) {\n      this.productos = collection;\n    }\n\n}","\r\n<div class=\"hero_area\">\r\n  <!-- header section strats -->\r\n  <header class=\"header_section\">\r\n\r\n    <div class=\"header_top\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"top_nav_container\">\r\n\r\n\r\n          <form class=\"search_form\" [formGroup]=\"busquedaForm\" (ngSubmit)=\"onSubmit()\" >\r\n\r\n              <input placeholder=\"Que necesitas?\" class=\"form-control\" id=\"filtro\" type=\"text\" formControlName=\"filtro\">\r\n\r\n              <button class=\"\" type=\"submit\">\r\n                <i class=\"fa fa-search\" aria-hidden=\"true\">Buscar</i>\r\n              </button>          \r\n\r\n          </form>          \r\n\r\n          <div *ngIf=\"pensando\">\r\n\r\n            <mat-spinner color=\"accent\" diameter=\"20\"></mat-spinner>\r\n\r\n          </div>\r\n    \r\n          <select class=\"generic_input\" #countrySelect (change)=\"onCountryChange(countrySelect.value)\" style=\"width:200px;\">\r\n            <option value=\"COL\">Colombia</option>\r\n            <option value=\"CHL\">Chile</option>\r\n            <option value=\"MEX\">Mexico</option>\r\n            <option value=\"PER\">Peru</option>\r\n          </select>    \r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>    \r\n\r\n  </header>\r\n  <!-- end header section -->\r\n</div>\r\n\r\n<div *ngIf=\"cliente\" >\r\n  <b> Bienvenido: {{ cliente.nombre }} </b>\r\n</div>\r\n\r\n<section class=\"product_section layout_padding\">\r\n  <div class=\"container\">\r\n    <div class=\"heading_container heading_center\">\r\n      <h2>\r\n        Nuestros Productos\r\n      </h2>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"productos\">\r\n      <div class=\"col-sm-6 col-lg-4\"  *ngFor=\"let item of productos\">\r\n        <div class=\"box\">\r\n          <div class=\"img-box\">\r\n            <img src=\"images/{{ item.urlImagen }}\" alt=\"\">\r\n            <a [routerLink]=\"['/productos', item.id]\" class=\"add_cart_btn\">\r\n              <span>\r\n                Ver Detalles\r\n              </span>\r\n            </a>\r\n          </div>\r\n          <div class=\"detail-box\">\r\n            <h5>\r\n              [ <span> {{ item.categoria }} </span> ]\r\n              <a >{{ item.nombre }}</a>\r\n            </h5>\r\n            <div class=\"product_info\">\r\n              <h5>\r\n                <span>{{ item.moneda }}</span> {{ item.precio }}\r\n              </h5>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n\r\n\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n-->","import { Component , OnInit } from '@angular/core';\r\n\r\nimport { ProductoService } from '../services/producto.service';\r\n\r\nimport { IProducto } from '../interfaces/carrito.response'\r\n\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'; \r\nimport { CarritoService } from '../services/carrito.service';\r\nimport { ICliente } from '../interfaces/cliente.response';\r\n\r\n@Component({\r\n  selector: 'app-buscar-producto',\r\n  templateUrl: './buscar-producto.component.html',\r\n  styleUrls: ['./buscar-producto.component.css']\r\n})\r\nexport class BuscarProductoComponent implements OnInit {\r\n\r\n  productos : IProducto[] = [];\r\n  cliente : ICliente | undefined ;\r\n  pensando : boolean = false;\r\n  \r\n  busquedaForm = this.formBuilder.group({\r\n    filtro: ''\r\n  });\r\n\r\n  constructor(\r\n    private productoService : ProductoService,\r\n    private carritoService : CarritoService,\r\n    private formBuilder: FormBuilder\r\n     ) { \r\n\r\n  }\r\n\r\n  onSubmit(): void {\r\n    // Process checkout data here\r\n    //console.warn('Your order has been submitted', this.checkoutForm.value);    \r\n    const busqueda = this.busquedaForm.get('filtro')?.value;\r\n    this.BuscarProductos( busqueda );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.BuscarProductos( 'all' );\r\n    this.cliente = this.carritoService.cliente;\r\n  }\r\n\r\n  BuscarProductos( filtro : string ) {\r\n    this.pensando = true;\r\n    this.productoService.getProducts(filtro).subscribe( data => {\r\n      this.productos = data;\r\n      this.productoService.persists( data );\r\n      this.pensando = false;\r\n    } );\r\n  }\r\n\r\n  onCountryChange( value : string ) {\r\n    this.carritoService.actualizarPais(value);\r\n  }\r\n\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","<section class=\"info_section \">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <div class=\"info_form \">\n                    <h5>\n                        Ingrese con su cuenta\n                    </h5>\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLoginSubmit()\" >\n                        <input type=\"email\" placeholder=\"Enter your email\" formControlName=\"email\" >\n                        <input type=\"password\" formControlName=\"password\" >\n                        <button type=\"submit\">\n                            Login\n                        </button>\n                    </form>\n                    <div *ngIf=\"pensando\">\n\n                        <mat-spinner color=\"accent\" diameter=\"20\"></mat-spinner>\n                    \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { FormBuilder } from '@angular/forms';\nimport { CarritoService } from '../services/carrito.service';\nimport { ClienteService } from '../services/cliente.service';\n\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'; \n\n@Component({\n  selector: 'app-login-cliente',\n  templateUrl: './login-cliente.component.html',\n  styleUrls: ['./login-cliente.component.css']\n})\n\nexport class LoginClienteComponent implements OnInit {\n\n  pensando : boolean = false;\n\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private carritoService : CarritoService,\n    private clienteService : ClienteService ) { }\n\n  loginForm = this.formBuilder.group({\n    email: '',\n    password: ''\n  });\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    this.pensando = true;\n    const email = this.loginForm.get('email')?.value;\n    const password = this.loginForm.get('password')?.value;\n    this.clienteService.autenticar( email, password ).subscribe( data => {\n      if( data.code == 1 )\n      {\n        this.carritoService.ObtenerCarrito(email).subscribe(data2 => {\n          this.pensando = false;\n          console.warn('carrito:',data2.id);\n          this.carritoService.persistir( data2 );\n          this.router.navigateByUrl('/');\n        });\n        this.carritoService.persistirCliente(data.cliente);\n      }\n      else\n      {\n        window.alert(\"Usuario/Password Invalido\");\n        this.pensando = false;\n      }\n    });\n  }\n\n}\n","\n<section class=\"why_us_section layout_padding\">\n    <div class=\"container\">\n      <div class=\"heading_container heading_center\">\n        <h2>\n          Su orden fue creada satisfactoriamente\n        </h2>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <div class=\"box \">\n            \n            <div class=\"detail-box\" *ngIf=\"orden\" >\n              <h5>\n                Numero de Orden : {{ orden.id }}\n              </h5>              \n              <h5>\n                Impuestos : {{ orden.valorImpuestos }}\n              </h5>              \n              <h5>\n                Total : {{ orden.precioTotal }}\n              </h5>              \n              \n            </div>\n\n          </div>\n        </div>\n\n        <div class=\"col-md-4\">\n          <div class=\"box \">\n            \n            <div class=\"detail-box\">\n              <h5>\n                Productos en la orden\n              </h5>              \n\n              <div *ngFor=\"let detalle of detalles\">\n                <div>\n                    {{ detalle.nombreProducto }} \n                </div>            \n                <div>\n                    {{ detalle.cantidadOrdenada }}\n                    x\n                    {{ detalle.precioUnitario }}\n                </div>\n            \n              </div>                          \n            </div>\n            \n          </div>\n        </div>\n\n      </div>\n    </div>\n</section>\n\n","import { Component, OnInit } from '@angular/core';\nimport { IDetalleOrden, IOrden } from '../interfaces/orden.response';\nimport { OrdenService } from '../services/orden.service';\n\n@Component({\n  selector: 'app-orden-creada',\n  templateUrl: './orden-creada.component.html',\n  styleUrls: ['./orden-creada.component.css']\n})\nexport class OrdenCreadaComponent implements OnInit {\n\n  orden : IOrden | undefined;\n  detalles : IDetalleOrden [] = [];\n\n  constructor(  private ordenService : OrdenService ) { }\n\n  ngOnInit(): void {\n\n    this.orden = this.ordenService.ordenCreada;\n    this.detalles = this.orden?.detallesOrden!;\n\n  }\n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","<app-top-bar></app-top-bar>\r\n\r\n<!-- div class=\"container\" -->\r\n\r\n  <router-outlet></router-outlet>\r\n\r\n<!--/div -->\r\n\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n-->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { CarritoService } from '../services/carrito.service';\nimport { OrdenService } from '../services/orden.service';\n\nimport { ICotizar, IProducto } from '../interfaces/carrito.response'\nimport { IDatosPago, IDetalleOrden, IMedioPago, IOrden } from '../interfaces/orden.response'\nimport { ICliente } from '../interfaces/cliente.response';\n\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'; \n\n@Component({\n  selector: 'app-pagar-orden',\n  templateUrl: './pagar-orden.component.html',\n  styleUrls: ['./pagar-orden.component.css']\n})\n\nexport class PagarOrdenComponent implements OnInit {\n\n  cotizar: ICotizar | undefined;\n\n  medios: IMedioPago[] = [];\n\n  mostrarCC : boolean = false;\n\n  pensando : boolean = false;\n\n  informacionForm = this.formBuilder.group({\n    NombreEnvio: new FormControl(),\n    ApellidoEnvio: new FormControl(),\n    DireccionEnvio: new FormControl(),\n    TelefonoEnvio: new FormControl(),\n    CiudadEnvio: new FormControl(),\n    CodigoAreaEnvio: new FormControl(),\n    medios: new FormControl(),\n    CCtitular: new FormControl(),\n    CCtipo: new FormControl(),\n    CCnumero: new FormControl(),\n    CCvencimiento: new FormControl(),\n    CCV: new FormControl()\n  });\n\n  facturacionForm = this.formBuilder.group({\n    NumeroDocumentoCliente: new FormControl(),\n    TelefonoFacturacion: new FormControl(),\n    DireccionFacturacion: new FormControl(),\n    CorreoElectronicoFacturacion: new FormControl()\n  });\n\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private carritoService : CarritoService,\n    private ordenService : OrdenService) {    \n  }\n\n  ngOnInit(): void {\n\n    this.pensando = true;\n\n    this.carritoService.cotizar().subscribe( data => {  \n      this.cotizar = data;\n    });\n\n    this.ordenService.consultarMedios().subscribe( data => {\n      this.medios = data;\n      this.pensando = false;\n    });\n\n    if( this.carritoService.cliente != undefined )\n    {\n      let cliente : ICliente = this.carritoService.cliente;\n      this.facturacionForm.patchValue({  \n        NumeroDocumentoCliente : cliente.nit,\n        TelefonoFacturacion : cliente.telefono,\n        DireccionFacturacion : cliente.direccion,\n        CorreoElectronicoFacturacion : cliente.userName\n        });\n    }\n\n  }\n\n  onMediosChange( value : any ) {\n    if( value == '2' )\n    {\n      this.mostrarCC = true;\n    }\n    else\n    {\n      this.mostrarCC = false;\n    }\n  }\n\n  pagarOrden() {\n\n    let NombreEnvio = this.informacionForm.get('NombreEnvio')?.value;\n    let ApellidoEnvio = this.informacionForm.get('ApellidoEnvio')?.value;\n    let DireccionEnvio = this.informacionForm.get('DireccionEnvio')?.value;\n    let TelefonoEnvio = this.informacionForm.get('TelefonoEnvio')?.value;\n    let CiudadEnvio = this.informacionForm.get('CiudadEnvio')?.value;\n    let CodigoAreaEnvio = this.informacionForm.get('CodigoAreaEnvio')?.value;\n    let medios = this.informacionForm.get('medios')?.value;\n    let CCtitular = this.informacionForm.get('CCtitular')?.value;\n    let CCtipo = this.informacionForm.get('CCtipo')?.value;\n    let CCnumero = this.informacionForm.get('CCnumero')?.value;\n    let CCvencimiento = this.informacionForm.get('CCvencimiento')?.value;\n    let CCV = this.informacionForm.get('CCV')?.value;\n\n    let NumeroDocumentoCliente = this.facturacionForm.get('NumeroDocumentoCliente')?.value;\n    let TelefonoFacturacion = this.facturacionForm.get('TelefonoFacturacion')?.value;\n    let DireccionFacturacion = this.facturacionForm.get('DireccionFacturacion')?.value;\n    let CorreoElectronicoFacturacion = this.facturacionForm.get('CorreoElectronicoFacturacion')?.value;\n\n    let cotizar : ICotizar = this.cotizar!;\n    let productos : IProducto [] = this.carritoService.productos;\n    let detalles : IDetalleOrden [] = [];\n    let datospago : IDatosPago [] = [];\n\n    let datopago : IDatosPago = {\n      anoExpiracion : 25,\n      codCV : CCV,\n      codMoneda : cotizar.moneda ,\n      email : CorreoElectronicoFacturacion ,\n      medioPago : Number(medios),\n      mesExpiracion : 1,\n      nombreTitular : CCtitular,\n      numeroTarjeta : CCnumero,\n      tipoTarjeta : CCtipo\n    }\n    datospago.push(datopago);\n\n    for( let item of productos ) {\n      let detalle : IDetalleOrden = {\n        cantidadOrdenada : item.cantidad,\n        codigoProducto : item.codigo,\n        codigoProveedor : item.codigoProveedor,\n        nombreProducto : item.nombre,\n        precioUnitario : item.precio,\n        productoId : item.id,\n        tipoProveedor : item.tipoProveedor\n      };\n      detalles.push(detalle);\n    }\n\n    let fullOrden : IOrden = {      \n      apellidoEnvio : ApellidoEnvio,\n      carritoId : this.carritoService.CarritoExiste(),\n      ciudadEnvio : CiudadEnvio,\n      ciudadFacturacion : CiudadEnvio,\n      codigoAreaEnvio : CodigoAreaEnvio,\n      codigoAreaFacturacion : CodigoAreaEnvio,\n      correoElectronicoFacturacion : CorreoElectronicoFacturacion,\n      datosPago : datospago,\n      detallesOrden : detalles,\n      direccionEnvio : DireccionEnvio,\n      direccionFacturacion : DireccionFacturacion,\n      emailCliente : CorreoElectronicoFacturacion,\n      estadoEnvio : CiudadEnvio,\n      estadoFacturacion : CiudadEnvio,\n      id : 0,\n      nombreEnvio : NombreEnvio,\n      numeroDocumentoCliente : NumeroDocumentoCliente,\n      paisEnvio : this.carritoService.pais,\n      paisFacturacion : this.carritoService.pais,\n      precioTotal : cotizar.total,\n      telefonoEnvio : TelefonoEnvio,\n      telefonoFacturacion : TelefonoFacturacion,\n      tipoDocumentoCliente : 'CC',\n      valorImpuestos : cotizar.impuesto,\n      \n      estado : '',\n      fechaCreacion : ''\n    }\n\n    this.pensando = true;\n    this.ordenService.colocarOrden( fullOrden ).subscribe( data=> {        \n      if( data.ordenId > 0 ) {\n        this.carritoService.limpiar().subscribe(datalimpiar => {});\n        fullOrden.id = data.ordenId;\n        this.ordenService.persistir( fullOrden );\n        this.router.navigateByUrl('/orden-creada');\n      }\n      this.pensando = false;\n    },\n    error => {\n      window.alert( 'Ocurrio un error al guardar la orden' );\n      this.pensando = false;\n    }\n    );\n\n  }\n\n}\n","<section class=\"info_section \">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <div class=\"info_form \">\n\n                    <h5>\n                        Informacion para el Envio\n                    </h5>\n                    <form [formGroup]=\"informacionForm\">\n                        <div>\n                            Nombre Envio<br />\n                        <input type=\"text\" placeholder=\"Nombre Envio\" formControlName=\"NombreEnvio\" >\n                        </div>\n                        <div>\n                            Apellido Envio<br />\n                        <input type=\"text\" placeholder=\"Apellido Envio\" formControlName=\"ApellidoEnvio\" >\n                        </div>\n                        <div>\n                            Direccion Envio<br />\n                        <input type=\"text\" placeholder=\"Direccion Envio\" formControlName=\"DireccionEnvio\" >\n                        </div>\n                        <div>\n                            Telefono<br />\n                        <input type=\"text\" placeholder=\"Telefono Envio\" formControlName=\"TelefonoEnvio\" >\n                        </div>\n                        <div>\n                            Ciudad Envio<br />\n                        <input type=\"text\" placeholder=\"Ciudad Envio\" formControlName=\"CiudadEnvio\" >\n                        </div>\n                        <div>\n                            Codigo Postal Envio<br />\n                        <input type=\"text\" placeholder=\"Codigo Postal Envio\" formControlName=\"CodigoAreaEnvio\" >\n                        </div>\n\n                        <div>    \n                            Tipo de Pago<br />\n                        <select formControlName=\"medios\" id=\"medios\" #mySelect (change)=\"onMediosChange(mySelect.value)\">\n                            <option *ngFor=\"let medio of medios\" [value]=\"medio.id\">\n                                {{medio.desMedioPago}}\n                            </option>\n                        </select>                      \n                        </div>\n                        <div *ngIf=\"mostrarCC\" >\n                            <div>\n                                Titular<br />\n                            <input type=\"text\" placeholder=\"Titular\" formControlName=\"CCtitular\" >\n                        </div>\n\n                        <div>\n\n                            Tipo Tarjeta<br />\n\n                            <select formControlName=\"CCtipo\">\n                                <option value=\"VI\">Visa</option>\n                                <option value=\"MC\">Master Card</option>\n                                <option value=\"AE\">AMEX</option>\n                              </select>\n\n                        </div>\n    \n                        <div>\n                            Numero<br />\n                        <input type=\"text\" placeholder=\"NUMERO\" formControlName=\"CCnumero\" >\n                    </div>\n                    <div>\n                            Expiracion<br />\n                        <input type=\"text\" placeholder=\"MM/YY\" formControlName=\"CCvencimiento\" >\n                    </div>\n                        <div>\n                            CCV<br />\n                        <input type=\"text\" placeholder=\"CCV\" formControlName=\"CCV\" >\n                        </div>\n                    </div>\n                    </form>\n\n\n                </div>\n            </div>            \n            <div class=\"col-md-3\">\n                <div class=\"info_form \">\n\n                    <h5>\n                        Facturacion\n                    </h5>\n                    <form [formGroup]=\"facturacionForm\">\n                        <div>\n                            Documento Facturacion<br />\n                        <input type=\"text\" placeholder=\"Direccion Facturacion\" formControlName=\"NumeroDocumentoCliente\" >\n                        </div>\n                        <div>\n                            Telefono Facturacion<br />\n                        <input type=\"text\" placeholder=\"Telefono Facturacion\" formControlName=\"TelefonoFacturacion\" >\n                        </div>\n                        <div>\n                            Direccion Facturacion<br />\n                        <input type=\"text\" placeholder=\"Direccion Facturacion\" formControlName=\"DireccionFacturacion\" >\n                        </div>\n                        <div>\n                            Correo Electronico Facturacion<br />\n                        <input type=\"text\" placeholder=\"Email Facturacion\" formControlName=\"CorreoElectronicoFacturacion\" >\n                        </div>\n                    </form>\n\n                </div>\n            </div>            \n            <div class=\"col-md-3\">\n                <div class=\"info_form \">\n\n\n                    <h5>\n                        Detalle del pago\n                    </h5>\n                    <div *ngIf=\"cotizar\">\n                        <h5>\n                            Unidades: {{ cotizar.unidades }}    \n                        </h5>\n                        <h5>\n                            Neto: {{ cotizar.moneda }} {{ cotizar.neto }}  \n                        </h5>\n                        <h5>\n                            Impuestos: {{ cotizar.moneda }} {{ cotizar.impuesto }}\n                        </h5>\n                        <h5>\n                            Transporte: {{ cotizar.moneda }} {{ cotizar.transporte }}\n                        </h5>\n                        <h5>\n                            Total: {{ cotizar.moneda }} {{ cotizar.total }} \n                        </h5>\n                    </div>\n\n                    <div *ngIf=\"!pensando\">\n\n                    <button class=\"generic_button\" (click)=\"pagarOrden()\">\n                        Pagar\n                    </button>\n\n                    </div>\n\n                    <div *ngIf=\"pensando\">\n\n                        <mat-spinner color=\"accent\" diameter=\"20\"></mat-spinner>\n            \n                      </div>\n\n                </div>\n            </div>            \n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport { BuscarProductoComponent } from './buscar-producto/buscar-producto.component';\r\nimport { DetalleProductoComponent } from './detalle-producto/detalle-producto.component';\r\nimport { LoginClienteComponent } from './login-cliente/login-cliente.component';\r\nimport { DetalleCarritoComponent } from './detalle-carrito/detalle-carrito.component';\r\nimport { PagarOrdenComponent } from './pagar-orden/pagar-orden.component';\r\nimport { RegistroClienteComponent } from './registro-cliente/registro-cliente.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport { OrdenCreadaComponent } from './orden-creada/orden-creada.component';\r\nimport { OrdenesClienteComponent } from './ordenes-cliente/ordenes-cliente.component'; \r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: BuscarProductoComponent },\r\n      { path: 'productos/:id', component: DetalleProductoComponent },\r\n      { path: 'login', component: LoginClienteComponent },\r\n      { path: 'carrito', component: DetalleCarritoComponent },\r\n      { path: 'pagar', component: PagarOrdenComponent },\r\n      { path: 'registro', component: RegistroClienteComponent },\r\n      { path: 'orden-creada', component: OrdenCreadaComponent },\r\n      { path: 'ordenes-cliente', component: OrdenesClienteComponent }\r\n    ]),\r\n    BrowserAnimationsModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    BuscarProductoComponent,\r\n    DetalleProductoComponent,\r\n    LoginClienteComponent,\r\n    DetalleCarritoComponent,\r\n    PagarOrdenComponent,\r\n    RegistroClienteComponent,\r\n    OrdenCreadaComponent,\r\n    OrdenesClienteComponent\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","<h2>Productos en el carrito</h2>\n\n<div *ngFor=\"let producto of productos\" style=\"width: 100%;\" >\n    <div>\n        [ {{ producto.categoria }} ] {{ producto.nombre }} \n        <button (click)=\"quitarProducto(producto)\" class=\"generic_button\">\n            Remover\n        </button>\n\n    </div>\n\n    <div>\n        {{ producto.cantidad }}\n        x\n        {{ producto.moneda }}\n        {{ producto.precio }}\n    </div>\n    <hr>\n</div>\n\n<div *ngIf=\"productos.length > 0\">\n<section class=\"info_section \">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <div class=\"info_form \">\n                  <h5>\n                    Proceder con el pago\n                </h5>\n                <button (click)=\"pagar()\" class=\"generic_button\">\n                    Ir a Pagar\n                </button>\n                </div>\n            </div>\n        </div>\n    </div>\n  </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport { CarritoService } from '../services/carrito.service';\n\nimport { IProducto } from '../interfaces/carrito.response'\n\n@Component({\n  selector: 'app-detalle-carrito',\n  templateUrl: './detalle-carrito.component.html',\n  styleUrls: ['./detalle-carrito.component.css']\n})\n\nexport class DetalleCarritoComponent implements OnInit {\n\n  productos : IProducto [] = [];\n\n  constructor(\n    private router: Router,\n    private carritoService : CarritoService) { \n\n  }\n\n  ngOnInit(): void {\n    this.consultarProductos();\n  }\n\n  consultarProductos() {\n    this.carritoService.consultarProductos().subscribe( data => {\n      this.productos = data;\n      this.carritoService.persistirProductos(data);\n    } );\n  }\n\n  quitarProducto(item : IProducto) {\n    this.carritoService.quitarProducto(item).subscribe( data => {\n      this.consultarProductos();\n    } );\n  }\n\n  pagar() {\n    this.router.navigateByUrl('/pagar');\n    //this.router.navigate(['/root/child', crisis.id]);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Configuracion {\n    \n    urlServicio : string = \"https://hayi88qmck.execute-api.us-east-2.amazonaws.com/Prod\"\n\n    constructor() {        \n    }\n\n    getMonedaFromCountry(pais : string) {\n        if( pais == 'COL' )\n          return 'COP';\n        else if ( pais == 'CHL' )\n          return 'CLP';\n        else if ( pais == 'MEX' )\n          return 'MXN';\n        else if ( pais == 'PER' )\n          return 'PEN';\n        else\n          return '';\n      }\n\n    obtenerStringAleatoria() {\n      let max = 1000000000;\n      let min = 100000000;\n      return (Math.floor(Math.random() * (max - min + 1)) + min).toString();\n    }\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent {\r\n  constructor () {\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","<div class=\"hero_area\">\r\n  <!-- header section strats -->\r\n  <header class=\"header_section\">\r\n    <div class=\"header_bottom\">\r\n      <div class=\"container-fluid\">\r\n        <nav class=\"navbar navbar-expand-lg custom_nav-container \">\r\n          <a class=\"navbar-brand\" [routerLink]=\"['/']\">\r\n            <span>\r\n              E-COMMERCE K'ALL SONYS\r\n            </span>\r\n          </a>\r\n\r\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"\"> </span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav \">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/']\" >Productos<span class=\"sr-only\">(current)</span></a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/login']\" >Login</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/registro']\" >Registrarse</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/carrito']\">Carrito</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/ordenes-cliente']\">Mis ordenes</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </header>\r\n  <!-- end header section -->\r\n</div>\r\n<!-- \r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n-->","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Configuracion } from './configuracion';\n\nimport { IAutenticar, ICliente } from '../interfaces/cliente.response';\n\n@Injectable({\n    providedIn: 'root'\n})\n  \nexport class ClienteService {\n  \n    httpOptions = {\n      headers: new HttpHeaders({'Content-Type': 'application/json'})\n    }\n\n    constructor(private http: HttpClient,\n      private configuracion : Configuracion) {        \n    }\n\n    autenticar( email : string , password : string ) {      \n        let request = {\n          userName : email,\n          password : password\n        };\n        let serviceUrl : string = this.configuracion.urlServicio;\n        let url = serviceUrl + '/cliente/autenticar' ;      \n        return this.http.post<IAutenticar> ( url , request , this.httpOptions);            \n    }\n\n    registrar( request : ICliente ) {\n        let serviceUrl : string = this.configuracion.urlServicio;\n        let url = serviceUrl + '/cliente/registrar' ;      \n        return this.http.post<ICliente> ( url , request , this.httpOptions);                    \n    }\n\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}